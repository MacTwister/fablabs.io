<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="acts_as_taggable_on_engine"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from acts_as_taggable_on_engine to application" fullCmd="acts_as_taggable_on_engine:install:migrations" taksId="migrations" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="tag_names"><RakeTask description="Forcing collate of tag names to utf8_bin" fullCmd="acts_as_taggable_on_engine:tag_names:collate_bin" taksId="collate_bin" /><RakeTask description="Forcing collate of tag names to utf8_general_ci" fullCmd="acts_as_taggable_on_engine:tag_names:collate_ci" taksId="collate_ci" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="app"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="app:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="app:update" taksId="update" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Remove old compiled assets" fullCmd="assets:clean[keep]" taksId="clean[keep]" /><RakeTask description="Remove compiled assets" fullCmd="assets:clobber" taksId="clobber" /><RakeTask description="Load asset compile environment" fullCmd="assets:environment" taksId="environment" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="bourbon"><RakeTask description="Move files to the Rails assets directory" fullCmd="bourbon:install[sass_path]" taksId="install[sass_path]" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="environment"><RakeTask description="Set the environment value for the database" fullCmd="db:environment:set" taksId="set" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Loads fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears a db/schema_cache.yml file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Creates a db/schema_cache.yml file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Creates a db/schema.rb file that is portable against any DB supported by Active Record" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Loads a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="Loads the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Creates the database, loads the schema, and initializes with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dumps the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreates the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="dev"><RakeTask description="Toggle development mode caching on/off" fullCmd="dev:cache" taksId="cache" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="discourse"><RakeTask description="Sync all labs with discourse" fullCmd="discourse:sync_labs" taksId="sync_labs" /><RakeTask description="Sync all machines with discourse" fullCmd="discourse:sync_machines" taksId="sync_machines" /><RakeTask description="Sync all projects with discourse" fullCmd="discourse:sync_projects" taksId="sync_projects" /><RakeTask description="Sync all sso users with discourse" fullCmd="discourse:sync_users" taksId="sync_users" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="dragonfly"><RakeTask description="Clear dragonfly uids from db" fullCmd="dragonfly:clear_images" taksId="clear_images" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="export"><RakeTask description="Export all projects" fullCmd="export:projects[output]" taksId="projects[output]" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fablab"><RakeTask description="Change labs with supernode kind to fab_lab kind" fullCmd="fablab:change_kind_to_supernode_labs" taksId="change_kind_to_supernode_labs" /><RakeTask description="Set default order for organizations" fullCmd="fablab:order_organizations" taksId="order_organizations" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="geocode"><RakeTask description="Geocode all objects without coordinates" fullCmd="geocode:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="geocoder"><RakeGroup description="" fullCmd="" taksId="maxmind"><RakeGroup description="" fullCmd="" taksId="geolite"><RakeTask description="Download MaxMind GeoLite City data" fullCmd="geocoder:maxmind:geolite:download" taksId="download" /><RakeTask description="Extract (unzip) MaxMind GeoLite City data" fullCmd="geocoder:maxmind:geolite:extract" taksId="extract" /><RakeTask description="Load/refresh MaxMind GeoLite City data" fullCmd="geocoder:maxmind:geolite:insert" taksId="insert" /><RakeTask description="Download and load/refresh MaxMind GeoLite City data" fullCmd="geocoder:maxmind:geolite:load" taksId="load" /></RakeGroup></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="haml"><RakeTask description="Convert html.erb to html.haml each file in app/views" fullCmd="haml:erb2haml" taksId="erb2haml" /></RakeGroup><RakeTask description="Print out all defined initializers in the order they are invoked by Rails" fullCmd="initializers" taksId="initializers" /><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="paperclip"><RakeTask description="Cleans out invalid attachments" fullCmd="paperclip:clean" taksId="clean" /><RakeTask description="find missing attachments" fullCmd="paperclip:find_broken_attachments" taksId="find_broken_attachments" /><RakeTask description="Refreshes both metadata and thumbnails" fullCmd="paperclip:refresh" taksId="refresh" /><RakeGroup description="" fullCmd="" taksId="refresh"><RakeTask description="Regenerates fingerprints for a given CLASS (and optional ATTACHMENT). Useful when changing digest" fullCmd="paperclip:refresh:fingerprints" taksId="fingerprints" /><RakeTask description="Regenerates content_type/size metadata for a given CLASS (and optional ATTACHMENT)" fullCmd="paperclip:refresh:metadata" taksId="metadata" /><RakeTask description="Regenerates missing thumbnail styles for all classes using Paperclip" fullCmd="paperclip:refresh:missing_styles" taksId="missing_styles" /><RakeTask description="Regenerates thumbnails for a given CLASS (and optional ATTACHMENT and STYLES splitted by comma)" fullCmd="paperclip:refresh:thumbnails" taksId="thumbnails" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="pg_search"><RakeGroup description="" fullCmd="" taksId="multisearch"><RakeTask description="Rebuild PgSearch multisearch records for a given model" fullCmd="pg_search:multisearch:rebuild[model,schema]" taksId="rebuild[model,schema]" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="raven"><RakeTask description="Send a test event to the remote Sentry server" fullCmd="raven:test[dsn]" taksId="test[dsn]" /></RakeGroup><RakeTask description="Restart app by touching tmp/restart.txt" fullCmd="restart" taksId="restart" /><RakeGroup description="" fullCmd="" taksId="rocket_pants"><RakeTask description="Generates a pretty listing of errors registered in the application" fullCmd="rocket_pants:errors" taksId="errors" /></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="sitemap"><RakeTask description="Delete all Sitemap files in public/ directory" fullCmd="sitemap:clean" taksId="clean" /><RakeTask description="Generate sitemaps but don't ping search engines" fullCmd="sitemap:create" taksId="create" /><RakeTask description="Install a default config/sitemap.rb file" fullCmd="sitemap:install" taksId="install" /><RakeTask description="Generate sitemaps and ping search engines" fullCmd="sitemap:refresh" taksId="refresh" /><RakeGroup description="" fullCmd="" taksId="refresh"><RakeTask description="Generate sitemaps but don't ping search engines" fullCmd="sitemap:refresh:no_ping" taksId="no_ping" /></RakeGroup></RakeGroup><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in spec/features" fullCmd="spec:features" taksId="features" /><RakeTask description="Run the code examples in spec/mailers" fullCmd="spec:mailers" taksId="mailers" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeTask description="Runs all tests in test folder except system ones" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests quickly, but also reset db" fullCmd="test:db" taksId="db" /><RakeTask description="Run system tests only" fullCmd="test:system" taksId="system" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeTask description="List all time zones, list by two-letter country code (`rails time:zones[US]`), or list by UTC offset (`rails time:zones[-8]`)" fullCmd="time:zones[country_or_offset]" taksId="zones[country_or_offset]" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear cache and socket files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="yarn"><RakeTask description="Install all JavaScript dependencies as specified via Yarn" fullCmd="yarn:install" taksId="install" /></RakeGroup></RakeGroup></Settings>
